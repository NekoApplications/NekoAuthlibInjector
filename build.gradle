plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.0'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

configurations {
	api.extendsFrom includeApi
	shadowInclude
}

repositories {
	mavenCentral()
}

loom {
	mods {
		"neko-authlib-injector" {
			sourceSet sourceSets.main
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	shadowInclude implementation('net.bytebuddy:byte-buddy-agent:1.14.0')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 8
}

shadowJar {
	archiveClassifier = "all-dev"
	configurations = [project.configurations.shadowInclude]
	minimize()
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
	exclude "/kotlin*"
	relocate "net.bytebuddy", "net.zhuruoling.deps.bytebuddy"
}

task("remapShadowJar", type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
	input = shadowJar.archiveFile
	archiveFileName = shadowJar.archiveFileName.get().replaceAll("-dev\\.jar\$", ".jar")
	addNestedDependencies = true
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}